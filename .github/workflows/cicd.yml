name: Spring Boot CI/CD
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
env:
  POSTGRES_DB: travel
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    
    - name: Build with Gradle (skip tests)
      run: ./gradlew build -x test
      
    - name: Build Docker image
      run: |
        docker build -t travel .
        docker save travel > app.tar
        
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: app-image
        path: app.tar
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: app-image
        
    - name: Deploy to DigitalOcean
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DIGITALOCEAN_HOST }}
        username: ${{ secrets.DIGITALOCEAN_USERNAME }}
        key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
        script: |
          docker load < app.tar
          docker stop travel || true
          docker rm travel || true
          docker run -d --name travel \
            -e SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/${{ env.POSTGRES_DB }} \
            -e SPRING_DATASOURCE_USERNAME=${{ env.POSTGRES_USER }} \
            -e SPRING_DATASOURCE_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
            -p 8080:8080 \
            travel
